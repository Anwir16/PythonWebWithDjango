[
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "admin",
        "importPath": "django.contrib",
        "description": "django.contrib",
        "isExtraImport": true,
        "detail": "django.contrib",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "AppConfig",
        "importPath": "django.apps",
        "description": "django.apps",
        "isExtraImport": true,
        "detail": "django.apps",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "migrations",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "models",
        "importPath": "django.db",
        "description": "django.db",
        "isExtraImport": true,
        "detail": "django.db",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "TestCase",
        "importPath": "django.test",
        "description": "django.test",
        "isExtraImport": true,
        "detail": "django.test",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "include",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "reverse_lazy",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "path",
        "importPath": "django.urls",
        "description": "django.urls",
        "isExtraImport": true,
        "detail": "django.urls",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "get_object_or_404",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "render",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "redirect",
        "importPath": "django.shortcuts",
        "description": "django.shortcuts",
        "isExtraImport": true,
        "detail": "django.shortcuts",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "login_required",
        "importPath": "django.contrib.auth.decorators",
        "description": "django.contrib.auth.decorators",
        "isExtraImport": true,
        "detail": "django.contrib.auth.decorators",
        "documentation": {}
    },
    {
        "label": "os",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "os",
        "description": "os",
        "detail": "os",
        "documentation": {}
    },
    {
        "label": "get_asgi_application",
        "importPath": "django.core.asgi",
        "description": "django.core.asgi",
        "isExtraImport": true,
        "detail": "django.core.asgi",
        "documentation": {}
    },
    {
        "label": "Path",
        "importPath": "pathlib",
        "description": "pathlib",
        "isExtraImport": true,
        "detail": "pathlib",
        "documentation": {}
    },
    {
        "label": "get_wsgi_application",
        "importPath": "django.core.wsgi",
        "description": "django.core.wsgi",
        "isExtraImport": true,
        "detail": "django.core.wsgi",
        "documentation": {}
    },
    {
        "label": "django.db.models.deletion",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "django.db.models.deletion",
        "description": "django.db.models.deletion",
        "detail": "django.db.models.deletion",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "settings",
        "importPath": "django.conf",
        "description": "django.conf",
        "isExtraImport": true,
        "detail": "django.conf",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "User",
        "importPath": "django.contrib.auth.models",
        "description": "django.contrib.auth.models",
        "isExtraImport": true,
        "detail": "django.contrib.auth.models",
        "documentation": {}
    },
    {
        "label": "UserAdmin",
        "importPath": "django.contrib.auth.admin",
        "description": "django.contrib.auth.admin",
        "isExtraImport": true,
        "detail": "django.contrib.auth.admin",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "forms",
        "importPath": "django",
        "description": "django",
        "isExtraImport": true,
        "detail": "django",
        "documentation": {}
    },
    {
        "label": "views",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "authenticate",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "login",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "logout",
        "importPath": "django.contrib.auth",
        "description": "django.contrib.auth",
        "isExtraImport": true,
        "detail": "django.contrib.auth",
        "documentation": {}
    },
    {
        "label": "UserCreationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "AuthenticationForm",
        "importPath": "django.contrib.auth.forms",
        "description": "django.contrib.auth.forms",
        "isExtraImport": true,
        "detail": "django.contrib.auth.forms",
        "documentation": {}
    },
    {
        "label": "hashlib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hashlib",
        "description": "hashlib",
        "detail": "hashlib",
        "documentation": {}
    },
    {
        "label": "hmac",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "hmac",
        "description": "hmac",
        "detail": "hmac",
        "documentation": {}
    },
    {
        "label": "json",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "json",
        "description": "json",
        "detail": "json",
        "documentation": {}
    },
    {
        "label": "urllib",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib",
        "description": "urllib",
        "detail": "urllib",
        "documentation": {}
    },
    {
        "label": "urllib.parse",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib.parse",
        "description": "urllib.parse",
        "detail": "urllib.parse",
        "documentation": {}
    },
    {
        "label": "urllib.request",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "urllib.request",
        "description": "urllib.request",
        "detail": "urllib.request",
        "documentation": {}
    },
    {
        "label": "random",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "random",
        "description": "random",
        "detail": "random",
        "documentation": {}
    },
    {
        "label": "requests",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "requests",
        "description": "requests",
        "detail": "requests",
        "documentation": {}
    },
    {
        "label": "datetime",
        "importPath": "datetime",
        "description": "datetime",
        "isExtraImport": true,
        "detail": "datetime",
        "documentation": {}
    },
    {
        "label": "HttpResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "HttpResponseRedirect",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "JsonResponse",
        "importPath": "django.http",
        "description": "django.http",
        "isExtraImport": true,
        "detail": "django.http",
        "documentation": {}
    },
    {
        "label": "sys",
        "kind": 6,
        "isExtraImport": true,
        "importPath": "sys",
        "description": "sys",
        "detail": "sys",
        "documentation": {}
    },
    {
        "label": "HomeConfig",
        "kind": 6,
        "importPath": "MyApp.home.apps",
        "description": "MyApp.home.apps",
        "peekOfCode": "class HomeConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'home'",
        "detail": "MyApp.home.apps",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "MyApp.home.urls",
        "description": "MyApp.home.urls",
        "peekOfCode": "app_name = 'home'\nurlpatterns = [\n    path('',views.dashboard, name='home'),\n]",
        "detail": "MyApp.home.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "MyApp.home.urls",
        "description": "MyApp.home.urls",
        "peekOfCode": "urlpatterns = [\n    path('',views.dashboard, name='home'),\n]",
        "detail": "MyApp.home.urls",
        "documentation": {}
    },
    {
        "label": "dashboard",
        "kind": 2,
        "importPath": "MyApp.home.views",
        "description": "MyApp.home.views",
        "peekOfCode": "def dashboard(request):\n    return render(request,'home/dashboard.html')",
        "detail": "MyApp.home.views",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "MyApp.MyApp.asgi",
        "description": "MyApp.MyApp.asgi",
        "peekOfCode": "application = get_asgi_application()",
        "detail": "MyApp.MyApp.asgi",
        "documentation": {}
    },
    {
        "label": "BASE_DIR",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "BASE_DIR = Path(__file__).resolve().parent.parent\nMEDIA_ROOT = '/MyApp/media/'\nMEDIA_URL = '/MyApp/media/'\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-$4+me+t6ygf*$9gvl(ye-7q+q1lcfq)k-rvcq#uf2a727k*dw&'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_ROOT",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "MEDIA_ROOT = '/MyApp/media/'\nMEDIA_URL = '/MyApp/media/'\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-$4+me+t6ygf*$9gvl(ye-7q+q1lcfq)k-rvcq#uf2a727k*dw&'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "MEDIA_URL",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "MEDIA_URL = '/MyApp/media/'\n# Quick-start development settings - unsuitable for production\n# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/\n# SECURITY WARNING: keep the secret key used in production secret!\nSECRET_KEY = 'django-insecure-$4+me+t6ygf*$9gvl(ye-7q+q1lcfq)k-rvcq#uf2a727k*dw&'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nSITE_ID = 3",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "SECRET_KEY",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "SECRET_KEY = 'django-insecure-$4+me+t6ygf*$9gvl(ye-7q+q1lcfq)k-rvcq#uf2a727k*dw&'\n# SECURITY WARNING: don't run with debug turned on in production!\nDEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nSITE_ID = 3\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "DEBUG",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "DEBUG = True\nALLOWED_HOSTS = []\n# Application definition\nSITE_ID = 3\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "ALLOWED_HOSTS",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "ALLOWED_HOSTS = []\n# Application definition\nSITE_ID = 3\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "SITE_ID",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "SITE_ID = 3\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.sites',\n    'home',",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "INSTALLED_APPS",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "INSTALLED_APPS = [\n    'django.contrib.admin',\n    'django.contrib.auth',\n    'django.contrib.contenttypes',\n    'django.contrib.sessions',\n    'django.contrib.messages',\n    'django.contrib.staticfiles',\n    'django.contrib.sites',\n    'home',\n    'user',",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "SOCIALACCOUNT_PROVIDERS",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "SOCIALACCOUNT_PROVIDERS = {\n    'google': {\n        'SCOPE': [\n            'profile',\n            'email',\n        ],\n        'AUTH_PARAMS': {\n            'access_type': 'online',\n        },\n    }",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "MIDDLEWARE",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "MIDDLEWARE = [\n    'django.middleware.security.SecurityMiddleware',\n    'django.contrib.sessions.middleware.SessionMiddleware',\n    'django.middleware.common.CommonMiddleware',\n    'django.middleware.csrf.CsrfViewMiddleware',\n    'django.contrib.auth.middleware.AuthenticationMiddleware',\n    'django.contrib.messages.middleware.MessageMiddleware',\n    'django.middleware.clickjacking.XFrameOptionsMiddleware',\n    'allauth.account.middleware.AccountMiddleware',\n]",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "ROOT_URLCONF",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "ROOT_URLCONF = 'MyApp.urls'\nTEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'MyApp'/'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "TEMPLATES",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "TEMPLATES = [\n    {\n        'BACKEND': 'django.template.backends.django.DjangoTemplates',\n        'DIRS': [BASE_DIR / 'MyApp'/'templates'],\n        'APP_DIRS': True,\n        'OPTIONS': {\n            'context_processors': [\n                'django.template.context_processors.debug',\n                'django.template.context_processors.request',\n                'django.contrib.auth.context_processors.auth',",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "WSGI_APPLICATION",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "WSGI_APPLICATION = 'MyApp.wsgi.application'\n# Database\n# https://docs.djangoproject.com/en/5.0/ref/settings/#databases\nDATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'FinalGame',\n        'USER': 'root',\n        'PASSWORD': '',\n        'HOST':'localhost',",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "DATABASES",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "DATABASES = {\n    'default': {\n        'ENGINE': 'django.db.backends.mysql',\n        'NAME': 'FinalGame',\n        'USER': 'root',\n        'PASSWORD': '',\n        'HOST':'localhost',\n        'PORT':'',\n    }\n}",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "AUTH_PASSWORD_VALIDATORS",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "AUTH_PASSWORD_VALIDATORS = [\n    {\n        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',\n    },\n    {\n        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',\n    },",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "LANGUAGE_CODE",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "LANGUAGE_CODE = 'en-us'\nTIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    BASE_DIR /\"MyApp\"/ \"static\",\n]",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "TIME_ZONE",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "TIME_ZONE = 'UTC'\nUSE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    BASE_DIR /\"MyApp\"/ \"static\",\n]\n# Default primary key field type",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "USE_I18N",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "USE_I18N = True\nUSE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    BASE_DIR /\"MyApp\"/ \"static\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "USE_TZ",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "USE_TZ = True\n# Static files (CSS, JavaScript, Images)\n# https://docs.djangoproject.com/en/5.0/howto/static-files/\nSTATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    BASE_DIR /\"MyApp\"/ \"static\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "STATIC_URL",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "STATIC_URL = '/static/'\nSTATICFILES_DIRS = [\n    BASE_DIR /\"MyApp\"/ \"static\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# set login url\nLOGIN_URL = 'user:login/'\n# LOGIN GOOGLE CONFIG",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "STATICFILES_DIRS",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "STATICFILES_DIRS = [\n    BASE_DIR /\"MyApp\"/ \"static\",\n]\n# Default primary key field type\n# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field\nDEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# set login url\nLOGIN_URL = 'user:login/'\n# LOGIN GOOGLE CONFIG\nAUTHENTICATION_BACKENDS={",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "DEFAULT_AUTO_FIELD",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'\n# set login url\nLOGIN_URL = 'user:login/'\n# LOGIN GOOGLE CONFIG\nAUTHENTICATION_BACKENDS={\n    \"django.contrib.auth.backends.ModelBackend\",\n    'allauth.account.auth_backends.AuthenticationBackend',\n}\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/'",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_URL",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "LOGIN_URL = 'user:login/'\n# LOGIN GOOGLE CONFIG\nAUTHENTICATION_BACKENDS={\n    \"django.contrib.auth.backends.ModelBackend\",\n    'allauth.account.auth_backends.AuthenticationBackend',\n}\nLOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/'\nACCOUNT_EMAIL_VERIFICATION = 'none'\nACCOUNT_EMAIL_REQUIRED = True",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "LOGIN_REDIRECT_URL",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "LOGIN_REDIRECT_URL = '/'\nLOGOUT_REDIRECT_URL = '/'\nACCOUNT_EMAIL_VERIFICATION = 'none'\nACCOUNT_EMAIL_REQUIRED = True\nACCOUNT_AUTHENTICATION_METHOD = 'email'\n# SENT EMAIL CONFIG\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "LOGOUT_REDIRECT_URL",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "LOGOUT_REDIRECT_URL = '/'\nACCOUNT_EMAIL_VERIFICATION = 'none'\nACCOUNT_EMAIL_REQUIRED = True\nACCOUNT_AUTHENTICATION_METHOD = 'email'\n# SENT EMAIL CONFIG\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = \"PhucNDCE171160@fpt.edu.vn\"",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_EMAIL_VERIFICATION",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "ACCOUNT_EMAIL_VERIFICATION = 'none'\nACCOUNT_EMAIL_REQUIRED = True\nACCOUNT_AUTHENTICATION_METHOD = 'email'\n# SENT EMAIL CONFIG\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = \"PhucNDCE171160@fpt.edu.vn\"\nEMAIL_HOST_PASSWORD = \"xzkkqgqlimkrblkz\"",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_EMAIL_REQUIRED",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "ACCOUNT_EMAIL_REQUIRED = True\nACCOUNT_AUTHENTICATION_METHOD = 'email'\n# SENT EMAIL CONFIG\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = \"PhucNDCE171160@fpt.edu.vn\"\nEMAIL_HOST_PASSWORD = \"xzkkqgqlimkrblkz\"\n# VNPAY CONFIG",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "ACCOUNT_AUTHENTICATION_METHOD",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "ACCOUNT_AUTHENTICATION_METHOD = 'email'\n# SENT EMAIL CONFIG\nEMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = \"PhucNDCE171160@fpt.edu.vn\"\nEMAIL_HOST_PASSWORD = \"xzkkqgqlimkrblkz\"\n# VNPAY CONFIG\nVNPAY_RETURN_URL = 'http://127.0.0.1:8000/wallet/payment_return'  # get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_BACKEND",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'\nEMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = \"PhucNDCE171160@fpt.edu.vn\"\nEMAIL_HOST_PASSWORD = \"xzkkqgqlimkrblkz\"\n# VNPAY CONFIG\nVNPAY_RETURN_URL = 'http://127.0.0.1:8000/wallet/payment_return'  # get from config\nVNPAY_PAYMENT_URL = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html'  # get from config\nVNPAY_API_URL = 'https://sandbox.vnpayment.vn/merchant_webapi/api/transaction'",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "EMAIL_HOST = 'smtp.gmail.com'\nEMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = \"PhucNDCE171160@fpt.edu.vn\"\nEMAIL_HOST_PASSWORD = \"xzkkqgqlimkrblkz\"\n# VNPAY CONFIG\nVNPAY_RETURN_URL = 'http://127.0.0.1:8000/wallet/payment_return'  # get from config\nVNPAY_PAYMENT_URL = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html'  # get from config\nVNPAY_API_URL = 'https://sandbox.vnpayment.vn/merchant_webapi/api/transaction'\nVNPAY_TMN_CODE = 'RJZONIBB'  # Website ID in VNPAY System, get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_USE_TLS",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "EMAIL_USE_TLS = True\nEMAIL_PORT = 587\nEMAIL_HOST_USER = \"PhucNDCE171160@fpt.edu.vn\"\nEMAIL_HOST_PASSWORD = \"xzkkqgqlimkrblkz\"\n# VNPAY CONFIG\nVNPAY_RETURN_URL = 'http://127.0.0.1:8000/wallet/payment_return'  # get from config\nVNPAY_PAYMENT_URL = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html'  # get from config\nVNPAY_API_URL = 'https://sandbox.vnpayment.vn/merchant_webapi/api/transaction'\nVNPAY_TMN_CODE = 'RJZONIBB'  # Website ID in VNPAY System, get from config\nVNPAY_HASH_SECRET_KEY = 'TD2734M9B2Y9JK5LM5CDVEO33CGM4MAP'  # Secret key for create checksum,get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_PORT",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "EMAIL_PORT = 587\nEMAIL_HOST_USER = \"PhucNDCE171160@fpt.edu.vn\"\nEMAIL_HOST_PASSWORD = \"xzkkqgqlimkrblkz\"\n# VNPAY CONFIG\nVNPAY_RETURN_URL = 'http://127.0.0.1:8000/wallet/payment_return'  # get from config\nVNPAY_PAYMENT_URL = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html'  # get from config\nVNPAY_API_URL = 'https://sandbox.vnpayment.vn/merchant_webapi/api/transaction'\nVNPAY_TMN_CODE = 'RJZONIBB'  # Website ID in VNPAY System, get from config\nVNPAY_HASH_SECRET_KEY = 'TD2734M9B2Y9JK5LM5CDVEO33CGM4MAP'  # Secret key for create checksum,get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_USER",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "EMAIL_HOST_USER = \"PhucNDCE171160@fpt.edu.vn\"\nEMAIL_HOST_PASSWORD = \"xzkkqgqlimkrblkz\"\n# VNPAY CONFIG\nVNPAY_RETURN_URL = 'http://127.0.0.1:8000/wallet/payment_return'  # get from config\nVNPAY_PAYMENT_URL = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html'  # get from config\nVNPAY_API_URL = 'https://sandbox.vnpayment.vn/merchant_webapi/api/transaction'\nVNPAY_TMN_CODE = 'RJZONIBB'  # Website ID in VNPAY System, get from config\nVNPAY_HASH_SECRET_KEY = 'TD2734M9B2Y9JK5LM5CDVEO33CGM4MAP'  # Secret key for create checksum,get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "EMAIL_HOST_PASSWORD",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "EMAIL_HOST_PASSWORD = \"xzkkqgqlimkrblkz\"\n# VNPAY CONFIG\nVNPAY_RETURN_URL = 'http://127.0.0.1:8000/wallet/payment_return'  # get from config\nVNPAY_PAYMENT_URL = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html'  # get from config\nVNPAY_API_URL = 'https://sandbox.vnpayment.vn/merchant_webapi/api/transaction'\nVNPAY_TMN_CODE = 'RJZONIBB'  # Website ID in VNPAY System, get from config\nVNPAY_HASH_SECRET_KEY = 'TD2734M9B2Y9JK5LM5CDVEO33CGM4MAP'  # Secret key for create checksum,get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "VNPAY_RETURN_URL",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "VNPAY_RETURN_URL = 'http://127.0.0.1:8000/wallet/payment_return'  # get from config\nVNPAY_PAYMENT_URL = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html'  # get from config\nVNPAY_API_URL = 'https://sandbox.vnpayment.vn/merchant_webapi/api/transaction'\nVNPAY_TMN_CODE = 'RJZONIBB'  # Website ID in VNPAY System, get from config\nVNPAY_HASH_SECRET_KEY = 'TD2734M9B2Y9JK5LM5CDVEO33CGM4MAP'  # Secret key for create checksum,get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "VNPAY_PAYMENT_URL",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "VNPAY_PAYMENT_URL = 'https://sandbox.vnpayment.vn/paymentv2/vpcpay.html'  # get from config\nVNPAY_API_URL = 'https://sandbox.vnpayment.vn/merchant_webapi/api/transaction'\nVNPAY_TMN_CODE = 'RJZONIBB'  # Website ID in VNPAY System, get from config\nVNPAY_HASH_SECRET_KEY = 'TD2734M9B2Y9JK5LM5CDVEO33CGM4MAP'  # Secret key for create checksum,get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "VNPAY_API_URL",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "VNPAY_API_URL = 'https://sandbox.vnpayment.vn/merchant_webapi/api/transaction'\nVNPAY_TMN_CODE = 'RJZONIBB'  # Website ID in VNPAY System, get from config\nVNPAY_HASH_SECRET_KEY = 'TD2734M9B2Y9JK5LM5CDVEO33CGM4MAP'  # Secret key for create checksum,get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "VNPAY_TMN_CODE",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "VNPAY_TMN_CODE = 'RJZONIBB'  # Website ID in VNPAY System, get from config\nVNPAY_HASH_SECRET_KEY = 'TD2734M9B2Y9JK5LM5CDVEO33CGM4MAP'  # Secret key for create checksum,get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "VNPAY_HASH_SECRET_KEY",
        "kind": 5,
        "importPath": "MyApp.MyApp.settings",
        "description": "MyApp.MyApp.settings",
        "peekOfCode": "VNPAY_HASH_SECRET_KEY = 'TD2734M9B2Y9JK5LM5CDVEO33CGM4MAP'  # Secret key for create checksum,get from config",
        "detail": "MyApp.MyApp.settings",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "MyApp.MyApp.urls",
        "description": "MyApp.MyApp.urls",
        "peekOfCode": "urlpatterns = [\n    path('admin/', admin.site.urls),\n    path('user/',include('user.urls')),\n    path('',include('home.urls')),\n    path('accounts/',include('allauth.urls')),\n    path('wallet/',include('wallet.urls')),\n]",
        "detail": "MyApp.MyApp.urls",
        "documentation": {}
    },
    {
        "label": "application",
        "kind": 5,
        "importPath": "MyApp.MyApp.wsgi",
        "description": "MyApp.MyApp.wsgi",
        "peekOfCode": "application = get_wsgi_application()",
        "detail": "MyApp.MyApp.wsgi",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MyApp.user.migrations.0001_initial",
        "description": "MyApp.user.migrations.0001_initial",
        "peekOfCode": "class Migration(migrations.Migration):\n    initial = True\n    dependencies = [\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='UserRegistration',\n            fields=[\n                ('user_name', models.CharField(max_length=50, primary_key=True, serialize=False)),\n                ('email', models.CharField(max_length=500)),",
        "detail": "MyApp.user.migrations.0001_initial",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MyApp.user.migrations.0002_profile_delete_userregistration",
        "description": "MyApp.user.migrations.0002_profile_delete_userregistration",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0001_initial'),\n        migrations.swappable_dependency(settings.AUTH_USER_MODEL),\n    ]\n    operations = [\n        migrations.CreateModel(\n            name='Profile',\n            fields=[\n                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),",
        "detail": "MyApp.user.migrations.0002_profile_delete_userregistration",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MyApp.user.migrations.0003_alter_profile_birthday",
        "description": "MyApp.user.migrations.0003_alter_profile_birthday",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0002_profile_delete_userregistration'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='profile',\n            name='birthday',\n            field=models.DateField(),\n        ),",
        "detail": "MyApp.user.migrations.0003_alter_profile_birthday",
        "documentation": {}
    },
    {
        "label": "Migration",
        "kind": 6,
        "importPath": "MyApp.user.migrations.0004_alter_profile_gender",
        "description": "MyApp.user.migrations.0004_alter_profile_gender",
        "peekOfCode": "class Migration(migrations.Migration):\n    dependencies = [\n        ('user', '0003_alter_profile_birthday'),\n    ]\n    operations = [\n        migrations.AlterField(\n            model_name='profile',\n            name='gender',\n            field=models.CharField(choices=[('Male', 'Male'), ('Female', 'Female'), ('Other', 'Other')], default='Other', max_length=6),\n        ),",
        "detail": "MyApp.user.migrations.0004_alter_profile_gender",
        "documentation": {}
    },
    {
        "label": "ProfileInline",
        "kind": 6,
        "importPath": "MyApp.user.admin",
        "description": "MyApp.user.admin",
        "peekOfCode": "class ProfileInline(admin.StackedInline):\n    model = Profile\n    can_delete = False\n    verbose_name_plural = 'Profile'\nclass CustomizedUserAdmin(UserAdmin):\n    inlines = (ProfileInline,)\nadmin.site.unregister(User)\nadmin.site.register(User, CustomizedUserAdmin)",
        "detail": "MyApp.user.admin",
        "documentation": {}
    },
    {
        "label": "CustomizedUserAdmin",
        "kind": 6,
        "importPath": "MyApp.user.admin",
        "description": "MyApp.user.admin",
        "peekOfCode": "class CustomizedUserAdmin(UserAdmin):\n    inlines = (ProfileInline,)\nadmin.site.unregister(User)\nadmin.site.register(User, CustomizedUserAdmin)",
        "detail": "MyApp.user.admin",
        "documentation": {}
    },
    {
        "label": "UserConfig",
        "kind": 6,
        "importPath": "MyApp.user.apps",
        "description": "MyApp.user.apps",
        "peekOfCode": "class UserConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'user'",
        "detail": "MyApp.user.apps",
        "documentation": {}
    },
    {
        "label": "UserUpdateForm",
        "kind": 6,
        "importPath": "MyApp.user.forms",
        "description": "MyApp.user.forms",
        "peekOfCode": "class UserUpdateForm(forms.ModelForm):\n    class Meta:\n        model = User\n        fields = ['username', 'email', 'first_name', 'last_name']",
        "detail": "MyApp.user.forms",
        "documentation": {}
    },
    {
        "label": "Profile",
        "kind": 6,
        "importPath": "MyApp.user.models",
        "description": "MyApp.user.models",
        "peekOfCode": "class Profile(models.Model):\n    user = models.OneToOneField(User, on_delete=models.CASCADE)\n    image = models.ImageField(default='default.png', upload_to='profile')\n    gender = models.CharField(max_length=6, choices=[\n        ('Male', 'Male'),\n        ('Female', 'Female'),\n        ('Other', 'Other'),\n    ], default='Other')\n    birthday = models.DateField()\n    def __str__(self):",
        "detail": "MyApp.user.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "MyApp.user.urls",
        "description": "MyApp.user.urls",
        "peekOfCode": "app_name = 'user'\nurlpatterns = [\n    path('login/',views.loginViews, name='login'),\n    path('register/',views.signup, name='register'),\n    path('signout/',views.logoutViews, name='signout'),\n    path('profile/',views.viewsProfile, name='profile'),\n    path('updateProfile/<int:user_id>/', views.updateProfile, name='updateProfile'),\n    path('updateImage/<int:user_id>/', views.updateImage, name='updateImage'),\n    path('password_reset/', auth_views.PasswordResetView.as_view(\n        template_name='registration/password_reset_form.html',",
        "detail": "MyApp.user.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "MyApp.user.urls",
        "description": "MyApp.user.urls",
        "peekOfCode": "urlpatterns = [\n    path('login/',views.loginViews, name='login'),\n    path('register/',views.signup, name='register'),\n    path('signout/',views.logoutViews, name='signout'),\n    path('profile/',views.viewsProfile, name='profile'),\n    path('updateProfile/<int:user_id>/', views.updateProfile, name='updateProfile'),\n    path('updateImage/<int:user_id>/', views.updateImage, name='updateImage'),\n    path('password_reset/', auth_views.PasswordResetView.as_view(\n        template_name='registration/password_reset_form.html',\n        email_template_name='password_reset_email.html',",
        "detail": "MyApp.user.urls",
        "documentation": {}
    },
    {
        "label": "signup",
        "kind": 2,
        "importPath": "MyApp.user.views",
        "description": "MyApp.user.views",
        "peekOfCode": "def signup(request):\n    if request.user.is_authenticated:\n        return redirect('/')\n    if request.method == 'POST':\n        form = UserCreationForm(request.POST)\n        if form.is_valid():\n            form.save()\n            username = form.cleaned_data.get('username')\n            print(f'username: {username}')\n            password = form.cleaned_data.get('password1')",
        "detail": "MyApp.user.views",
        "documentation": {}
    },
    {
        "label": "loginViews",
        "kind": 2,
        "importPath": "MyApp.user.views",
        "description": "MyApp.user.views",
        "peekOfCode": "def loginViews(request):\n    if request.user.is_authenticated:\n        return redirect('/')\n    if request.method == 'POST':\n        username = request.POST['username']\n        password = request.POST['password']\n        user = authenticate(username=username, password=password)\n        if user is not None:\n            login(request, user)\n            return redirect('/')",
        "detail": "MyApp.user.views",
        "documentation": {}
    },
    {
        "label": "logoutViews",
        "kind": 2,
        "importPath": "MyApp.user.views",
        "description": "MyApp.user.views",
        "peekOfCode": "def logoutViews(request):\n    logout(request)\n    return redirect('user:login')\n@login_required\ndef viewsProfile(request):\n    profile = Profile.objects.get(user=request.user)\n    if request.user.is_superuser:\n        return redirect('/admin/')\n    return render(request,'user/profile.html',{'profile':profile})\n@login_required",
        "detail": "MyApp.user.views",
        "documentation": {}
    },
    {
        "label": "viewsProfile",
        "kind": 2,
        "importPath": "MyApp.user.views",
        "description": "MyApp.user.views",
        "peekOfCode": "def viewsProfile(request):\n    profile = Profile.objects.get(user=request.user)\n    if request.user.is_superuser:\n        return redirect('/admin/')\n    return render(request,'user/profile.html',{'profile':profile})\n@login_required\ndef updateProfile(request, user_id):\n    user = get_object_or_404(User, id=user_id)\n    if request.method == 'POST':\n        form = UserUpdateForm(request.POST, instance=user)",
        "detail": "MyApp.user.views",
        "documentation": {}
    },
    {
        "label": "updateProfile",
        "kind": 2,
        "importPath": "MyApp.user.views",
        "description": "MyApp.user.views",
        "peekOfCode": "def updateProfile(request, user_id):\n    user = get_object_or_404(User, id=user_id)\n    if request.method == 'POST':\n        form = UserUpdateForm(request.POST, instance=user)\n        if form.is_valid():\n            form.save()\n            return redirect('user:profile')\n    else:\n        form = UserUpdateForm(instance=user)\n    return render(request, 'user/updateProfile.html', {'form': form})",
        "detail": "MyApp.user.views",
        "documentation": {}
    },
    {
        "label": "updateImage",
        "kind": 2,
        "importPath": "MyApp.user.views",
        "description": "MyApp.user.views",
        "peekOfCode": "def updateImage(requests, user_id):\n    pass",
        "detail": "MyApp.user.views",
        "documentation": {}
    },
    {
        "label": "SCOPES",
        "kind": 5,
        "importPath": "MyApp.user.views",
        "description": "MyApp.user.views",
        "peekOfCode": "SCOPES = ['https://www.googleapis.com/auth/gmail.send']\n# Create your views here.\ndef signup(request):\n    if request.user.is_authenticated:\n        return redirect('/')\n    if request.method == 'POST':\n        form = UserCreationForm(request.POST)\n        if form.is_valid():\n            form.save()\n            username = form.cleaned_data.get('username')",
        "detail": "MyApp.user.views",
        "documentation": {}
    },
    {
        "label": "WalletConfig",
        "kind": 6,
        "importPath": "MyApp.wallet.apps",
        "description": "MyApp.wallet.apps",
        "peekOfCode": "class WalletConfig(AppConfig):\n    default_auto_field = 'django.db.models.BigAutoField'\n    name = 'wallet'",
        "detail": "MyApp.wallet.apps",
        "documentation": {}
    },
    {
        "label": "PaymentForm",
        "kind": 6,
        "importPath": "MyApp.wallet.models",
        "description": "MyApp.wallet.models",
        "peekOfCode": "class PaymentForm(forms.Form):\n    order_id = forms.CharField(max_length=250)\n    order_type = forms.CharField(max_length=20)\n    amount = forms.IntegerField()\n    order_desc = forms.CharField(max_length=100)\n    bank_code = forms.CharField(max_length=20, required=False)\n    language = forms.CharField(max_length=2)",
        "detail": "MyApp.wallet.models",
        "documentation": {}
    },
    {
        "label": "app_name",
        "kind": 5,
        "importPath": "MyApp.wallet.urls",
        "description": "MyApp.wallet.urls",
        "peekOfCode": "app_name = 'wallet'\nurlpatterns = [\n    path('pay/', views.index, name='index'),\n    path('payment/', views.payment, name='payment'),\n    path('payment_ipn/', views.payment_ipn, name='payment_ipn'),\n    path('payment_return/', views.payment_return, name='payment_return'),\n    path('query/', views.query, name='query'),\n    path('refund/', views.refund, name='refund'),\n]",
        "detail": "MyApp.wallet.urls",
        "documentation": {}
    },
    {
        "label": "urlpatterns",
        "kind": 5,
        "importPath": "MyApp.wallet.urls",
        "description": "MyApp.wallet.urls",
        "peekOfCode": "urlpatterns = [\n    path('pay/', views.index, name='index'),\n    path('payment/', views.payment, name='payment'),\n    path('payment_ipn/', views.payment_ipn, name='payment_ipn'),\n    path('payment_return/', views.payment_return, name='payment_return'),\n    path('query/', views.query, name='query'),\n    path('refund/', views.refund, name='refund'),\n]",
        "detail": "MyApp.wallet.urls",
        "documentation": {}
    },
    {
        "label": "index",
        "kind": 2,
        "importPath": "MyApp.wallet.views",
        "description": "MyApp.wallet.views",
        "peekOfCode": "def index(request):\n    return render(request, \"payment/index.html\", {\"title\": \"Danh sách demo\"})\ndef hmacsha512(key, data):\n    byteKey = key.encode('utf-8')\n    byteData = data.encode('utf-8')\n    return hmac.new(byteKey, byteData, hashlib.sha512).hexdigest()\ndef payment(request):\n    if request.method == 'POST':\n        # Process input data and build url payment\n        form = PaymentForm(request.POST)",
        "detail": "MyApp.wallet.views",
        "documentation": {}
    },
    {
        "label": "hmacsha512",
        "kind": 2,
        "importPath": "MyApp.wallet.views",
        "description": "MyApp.wallet.views",
        "peekOfCode": "def hmacsha512(key, data):\n    byteKey = key.encode('utf-8')\n    byteData = data.encode('utf-8')\n    return hmac.new(byteKey, byteData, hashlib.sha512).hexdigest()\ndef payment(request):\n    if request.method == 'POST':\n        # Process input data and build url payment\n        form = PaymentForm(request.POST)\n        if form.is_valid():\n            order_type = form.cleaned_data['order_type']",
        "detail": "MyApp.wallet.views",
        "documentation": {}
    },
    {
        "label": "payment",
        "kind": 2,
        "importPath": "MyApp.wallet.views",
        "description": "MyApp.wallet.views",
        "peekOfCode": "def payment(request):\n    if request.method == 'POST':\n        # Process input data and build url payment\n        form = PaymentForm(request.POST)\n        if form.is_valid():\n            order_type = form.cleaned_data['order_type']\n            order_id = form.cleaned_data['order_id']\n            amount = form.cleaned_data['amount']\n            order_desc = form.cleaned_data['order_desc']\n            bank_code = form.cleaned_data['bank_code']",
        "detail": "MyApp.wallet.views",
        "documentation": {}
    },
    {
        "label": "payment_ipn",
        "kind": 2,
        "importPath": "MyApp.wallet.views",
        "description": "MyApp.wallet.views",
        "peekOfCode": "def payment_ipn(request):\n    inputData = request.GET\n    if inputData:\n        vnp = vnpay()\n        vnp.responseData = inputData.dict()\n        order_id = inputData['vnp_TxnRef']\n        amount = inputData['vnp_Amount']\n        order_desc = inputData['vnp_OrderInfo']\n        vnp_TransactionNo = inputData['vnp_TransactionNo']\n        vnp_ResponseCode = inputData['vnp_ResponseCode']",
        "detail": "MyApp.wallet.views",
        "documentation": {}
    },
    {
        "label": "payment_return",
        "kind": 2,
        "importPath": "MyApp.wallet.views",
        "description": "MyApp.wallet.views",
        "peekOfCode": "def payment_return(request):\n    inputData = request.GET\n    if inputData:\n        vnp = vnpay()\n        vnp.responseData = inputData.dict()\n        order_id = inputData['vnp_TxnRef']\n        amount = int(inputData['vnp_Amount']) / 100\n        order_desc = inputData['vnp_OrderInfo']\n        vnp_TransactionNo = inputData['vnp_TransactionNo']\n        vnp_ResponseCode = inputData['vnp_ResponseCode']",
        "detail": "MyApp.wallet.views",
        "documentation": {}
    },
    {
        "label": "get_client_ip",
        "kind": 2,
        "importPath": "MyApp.wallet.views",
        "description": "MyApp.wallet.views",
        "peekOfCode": "def get_client_ip(request):\n    x_forwarded_for = request.META.get('HTTP_X_FORWARDED_FOR')\n    if x_forwarded_for:\n        ip = x_forwarded_for.split(',')[0]\n    else:\n        ip = request.META.get('REMOTE_ADDR')\n    return ip\nn = random.randint(10**11, 10**12 - 1)\nn_str = str(n)\nwhile len(n_str) < 12:",
        "detail": "MyApp.wallet.views",
        "documentation": {}
    },
    {
        "label": "query",
        "kind": 2,
        "importPath": "MyApp.wallet.views",
        "description": "MyApp.wallet.views",
        "peekOfCode": "def query(request):\n    if request.method == 'GET':\n        return render(request, \"payment/query.html\", {\"title\": \"Kiểm tra kết quả giao dịch\"})\n    url = settings.VNPAY_API_URL\n    secret_key = settings.VNPAY_HASH_SECRET_KEY\n    vnp_TmnCode = settings.VNPAY_TMN_CODE\n    vnp_Version = '2.1.0'\n    vnp_RequestId = n_str\n    vnp_Command = 'querydr'\n    vnp_TxnRef = request.POST['order_id']",
        "detail": "MyApp.wallet.views",
        "documentation": {}
    },
    {
        "label": "refund",
        "kind": 2,
        "importPath": "MyApp.wallet.views",
        "description": "MyApp.wallet.views",
        "peekOfCode": "def refund(request):\n    if request.method == 'GET':\n        return render(request, \"payment/refund.html\", {\"title\": \"Hoàn tiền giao dịch\"})\n    url = settings.VNPAY_API_URL\n    secret_key = settings.VNPAY_HASH_SECRET_KEY\n    vnp_TmnCode = settings.VNPAY_TMN_CODE\n    vnp_RequestId = n_str\n    vnp_Version = '2.1.0'\n    vnp_Command = 'refund'\n    vnp_TransactionType = request.POST['TransactionType']",
        "detail": "MyApp.wallet.views",
        "documentation": {}
    },
    {
        "label": "n",
        "kind": 5,
        "importPath": "MyApp.wallet.views",
        "description": "MyApp.wallet.views",
        "peekOfCode": "n = random.randint(10**11, 10**12 - 1)\nn_str = str(n)\nwhile len(n_str) < 12:\n    n_str = '0' + n_str\ndef query(request):\n    if request.method == 'GET':\n        return render(request, \"payment/query.html\", {\"title\": \"Kiểm tra kết quả giao dịch\"})\n    url = settings.VNPAY_API_URL\n    secret_key = settings.VNPAY_HASH_SECRET_KEY\n    vnp_TmnCode = settings.VNPAY_TMN_CODE",
        "detail": "MyApp.wallet.views",
        "documentation": {}
    },
    {
        "label": "n_str",
        "kind": 5,
        "importPath": "MyApp.wallet.views",
        "description": "MyApp.wallet.views",
        "peekOfCode": "n_str = str(n)\nwhile len(n_str) < 12:\n    n_str = '0' + n_str\ndef query(request):\n    if request.method == 'GET':\n        return render(request, \"payment/query.html\", {\"title\": \"Kiểm tra kết quả giao dịch\"})\n    url = settings.VNPAY_API_URL\n    secret_key = settings.VNPAY_HASH_SECRET_KEY\n    vnp_TmnCode = settings.VNPAY_TMN_CODE\n    vnp_Version = '2.1.0'",
        "detail": "MyApp.wallet.views",
        "documentation": {}
    },
    {
        "label": "vnpay",
        "kind": 6,
        "importPath": "MyApp.wallet.vnpay",
        "description": "MyApp.wallet.vnpay",
        "peekOfCode": "class vnpay:\n    requestData = {}\n    responseData = {}\n    def get_payment_url(self, vnpay_payment_url, secret_key):\n        inputData = sorted(self.requestData.items())\n        queryString = ''\n        hasData = ''\n        seq = 0\n        for key, val in inputData:\n            if seq == 1:",
        "detail": "MyApp.wallet.vnpay",
        "documentation": {}
    },
    {
        "label": "main",
        "kind": 2,
        "importPath": "MyApp.manage",
        "description": "MyApp.manage",
        "peekOfCode": "def main():\n    \"\"\"Run administrative tasks.\"\"\"\n    os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'MyApp.settings')\n    try:\n        from django.core.management import execute_from_command_line\n    except ImportError as exc:\n        raise ImportError(\n            \"Couldn't import Django. Are you sure it's installed and \"\n            \"available on your PYTHONPATH environment variable? Did you \"\n            \"forget to activate a virtual environment?\"",
        "detail": "MyApp.manage",
        "documentation": {}
    }
]